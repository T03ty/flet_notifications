name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Define Android SDK Path
        run: echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV

      - name: Cache Flet Flutter SDK
        uses: actions/cache@v4
        with:
          path: ~/flutter
          key: ${{ runner.os }}-flet-flutter-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-flet-flutter-

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/pyproject.toml', '**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Install OpenJDK (required for Android SDK)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-17-jdk

      - name: Set up Java and Android environment variables
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ env.ANDROID_SDK_ROOT }}" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ env.ANDROID_SDK_ROOT }}" >> $GITHUB_ENV

      - name: Set up and activate virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip

      - name: Install Python dependencies
        working-directory: examples/flet_notifications_example
        run: |
          source ../../.venv/bin/activate
          pip install flet
          pip list

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build APK
        working-directory: examples/flet_notifications_example
        run: |
          source ../../.venv/bin/activate
          flet build apk \
            --module-name src.main \
            --android-permissions android.permission.WRITE_EXTERNAL_STORAGE=True \
            android.permission.READ_EXTERNAL_STORAGE=True \
            android.permission.MANAGE_EXTERNAL_STORAGE=True \
            --compile-app --compile-packages --no-android-splash

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ToolCoin-APK
          path: examples/flet_notifications_example/build/apk/*.apk
